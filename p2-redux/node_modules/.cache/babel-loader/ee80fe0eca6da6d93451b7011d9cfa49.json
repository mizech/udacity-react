{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Leaderboard/Leaderboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport \"./Leaderboard.css\";\n\nvar Leaderboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Leaderboard, _Component);\n\n  function Leaderboard() {\n    _classCallCheck(this, Leaderboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Leaderboard).apply(this, arguments));\n  }\n\n  _createClass(Leaderboard, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.username) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      }\n\n      var users = Object.values(this.props.users);\n      var userProfil = users.map(function (user) {\n        return React.createElement(\"div\", {\n          className: \"user-profil\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"user-avatar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: user.avatarURL,\n          alt: \"avatar-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"user-avatar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: user.avatarURL,\n          alt: \"avatar-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Leaderboard\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, userProfil));\n    }\n  }]);\n\n  return Leaderboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions,\n    users: state.users,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Leaderboard/Leaderboard.js"],"names":["React","Component","connect","Redirect","Navbar","Leaderboard","props","username","users","Object","values","userProfil","map","user","avatarURL","mapStateToProps","state","questions","authedUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,mBAAP;;IAEMC,W;;;;;;;;;;;;;6BACK;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACtB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKJ,KAAL,CAAWE,KAAzB,CAAd;AAEA,UAAIG,UAAU,GAAGH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI,EAAI;AACjC,eAAO;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAGA,IAAI,CAACC,SAAhB;AAA4B,UAAA,GAAG,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADK,EAIL;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAGD,IAAI,CAACC,SAAhB;AAA4B,UAAA,GAAG,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJK,CAAP;AAQD,OATgB,CAAjB;AAWA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIH,UADJ,CAHF,CADF;AASD;;;;EA5BuBV,S;;AA+B1B,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADd;AAEHT,IAAAA,KAAK,EAAEQ,KAAK,CAACR,KAFV;AAGHD,IAAAA,QAAQ,EAAES,KAAK,CAACE,UAAN,CAAiBX,QAAjB,IAA6B;AAHpC,GAAP;AAKH,CAND;;AAQA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./../Navbar/Navbar\";\n\nimport \"./Leaderboard.css\";\n\nclass Leaderboard extends Component {\n  render() {\n    if (!this.props.username) {\n        return <Redirect to=\"/\" />\n    }\n\n    const users = Object.values(this.props.users);\n\n    let userProfil = users.map(user => {\n      return <div className=\"user-profil\">\n        <div className=\"user-avatar\">\n          <img src={ user.avatarURL } alt=\"avatar-image\" />\n        </div>\n        <div className=\"user-avatar\">\n          <img src={ user.avatarURL } alt=\"avatar-image\" />\n        </div>\n      </div>\n    });\n\n    return (\n      <div>\n        <Navbar />\n        <h1>Leaderboard</h1>\n        <div>\n          { userProfil }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n        users: state.users,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);"]},"metadata":{},"sourceType":"module"}