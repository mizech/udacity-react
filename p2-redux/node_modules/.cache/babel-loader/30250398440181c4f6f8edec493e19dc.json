{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './Result.css';\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result() {\n    _classCallCheck(this, Result);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Result).apply(this, arguments));\n  }\n\n  _createClass(Result, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var qid;\n\n      if (this.props.questionId) {\n        qid = this.props.questionId;\n      } else {\n        qid = window.location.pathname.split(\"/\")[2];\n      }\n\n      var question = Object.values(this.props.questions).find(function (question) {\n        return question.id === qid;\n      });\n      var sum = parseInt(question.optionOne.votes.length) + parseInt(question.optionTwo.votes.length);\n\n      var computePercentage = function computePercentage(option) {\n        return option * 100 / (sum || 1);\n      };\n\n      var currentQuestion = this.props.questions[qid];\n      var selectedOption = currentQuestion.optionOne.votes.some(function (vote) {\n        return vote === _this.props.username.toLowerCase().replace(\" \", \"\");\n      });\n      console.log(this.props.questions[qid]);\n      console.log(this.props.username);\n      console.log(selectedOption);\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Current Poll Result\"), React.createElement(\"div\", {\n        className: \"optionResult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Votes:\"), \" \", question.optionOne.votes.length, \" - \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Percentage: \"), computePercentage(question.optionOne.votes.length), \"%\")), React.createElement(\"div\", {\n        className: \"optionResult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, question.optionTwo.text), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Votes:\"), \" \", question.optionTwo.votes.length, \" - \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Percentage: \"), computePercentage(question.optionTwo.votes.length), \"%\")));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions,\n    users: state.users,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js"],"names":["React","Component","connect","Result","qid","props","questionId","window","location","pathname","split","question","Object","values","questions","find","id","sum","parseInt","optionOne","votes","length","optionTwo","computePercentage","option","currentQuestion","selectedOption","some","vote","username","toLowerCase","replace","console","log","text","mapStateToProps","state","users","authedUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\nimport './Result.css';\n\nclass Result extends Component {\n    render() {\n        let qid;\n\n        if (this.props.questionId) {\n            qid = this.props.questionId;\n        } else {\n            qid = window.location.pathname.split(\"/\")[2];\n        }\n\n        let question = Object.values(this.props.questions).find((question) => {\n            return question.id === qid;\n        });\n\n        const sum = parseInt(question.optionOne.votes.length)\n            + parseInt(question.optionTwo.votes.length);\n        \n        const computePercentage = (option) => {\n            return (option * 100) / (sum || 1);\n        }\n\n        const currentQuestion = this.props.questions[qid];\n\n        const selectedOption = currentQuestion\n                                .optionOne\n                                .votes\n                                .some((vote) => {\n                                    return vote === this.props.username\n                                                                .toLowerCase()\n                                                                .replace(\" \", \"\");\n                                });\n\n        console.log(this.props.questions[qid]);\n        console.log(this.props.username);\n        console.log(selectedOption);\n        \n        return <div className=\"result\" >\n            <h2>Current Poll Result</h2>\n            <div className=\"optionResult\">\n                <div className=\"question\">{ question.optionOne.text }</div>\n                <div>\n                    <b>Votes:</b> { question.optionOne.votes.length } - <b>Percentage: </b> \n                        {computePercentage(question.optionOne.votes.length)}%\n                </div>\n            </div>\n            <div className=\"optionResult\">\n                <div className=\"question\">{ question.optionTwo.text }</div>\n                <div>\n                    <b>Votes:</b> { question.optionTwo.votes.length } - <b>Percentage: </b> \n                        {computePercentage(question.optionTwo.votes.length)}%\n                </div>\n            </div>\n        </div>\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n        users: state.users,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nexport default connect(mapStateToProps)(Result);"]},"metadata":{},"sourceType":"module"}