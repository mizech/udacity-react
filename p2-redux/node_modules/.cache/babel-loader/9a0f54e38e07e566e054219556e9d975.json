{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Poll/Poll.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport QuestionCard from \"./../QuestionCard/QuestionCard\";\nimport './Poll.css';\n\nvar Poll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Poll, _Component);\n\n  function Poll() {\n    _classCallCheck(this, Poll);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Poll).apply(this, arguments));\n  }\n\n  _createClass(Poll, [{\n    key: \"render\",\n    value: function render() {\n      var authed = false;\n\n      if (document.cookie) {\n        var parts = document.cookie.split(\"=\");\n\n        if (parts.length) {\n          authed = parts[1];\n        }\n      }\n\n      if (!this.props.username && !authed) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      }\n\n      var qid;\n\n      if (this.props.questionId) {\n        qid = this.props.questionId;\n      } else {\n        qid = window.location.pathname.split(\"/\")[2];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Would you rather ... ?\"), React.createElement(QuestionCard, {\n        author: \"\",\n        key: \"1\",\n        authedUser: \"\",\n        optionOne: \"Eins 1\",\n        optionTwo: question.optionTwo.text,\n        answered: this.state.answered,\n        countOptionOne: question.optionOne.votes.length,\n        countOptionTwo: question.optionTwo.votes.length,\n        id: question.id,\n        avatarUrl: avatarUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Poll;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions,\n    users: state.users,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nexport default connect(mapStateToProps)(Poll);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Poll/Poll.js"],"names":["React","Component","Redirect","connect","Navbar","QuestionCard","Poll","authed","document","cookie","parts","split","length","props","username","qid","questionId","window","location","pathname","question","optionTwo","text","state","answered","optionOne","votes","id","avatarUrl","mapStateToProps","questions","users","authedUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;6BAEO;AACL,UAAIC,MAAM,GAAG,KAAb;;AAEA,UAAIC,QAAQ,CAACC,MAAb,EAAqB;AACrB,YAAMC,KAAK,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AAEA,YAAID,KAAK,CAACE,MAAV,EAAkB;AACdL,UAAAA,MAAM,GAAGG,KAAK,CAAC,CAAD,CAAd;AACH;AACA;;AAED,UAAI,CAAC,KAAKG,KAAL,CAAWC,QAAZ,IAAwB,CAACP,MAA7B,EAAqC;AACjC,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAIQ,GAAJ;;AAEA,UAAI,KAAKF,KAAL,CAAWG,UAAf,EAA2B;AACvBD,QAAAA,GAAG,GAAG,KAAKF,KAAL,CAAWG,UAAjB;AACH,OAFD,MAEO;AACHD,QAAAA,GAAG,GAAGE,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBR,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAN;AACH;;AAED,aAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFL,EAGK,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAC,EAArB;AAAwB,QAAA,GAAG,EAAC,GAA5B;AACQ,QAAA,UAAU,EAAC,EADnB;AAEQ,QAAA,SAAS,EAAC,QAFlB;AAGQ,QAAA,SAAS,EAAGS,QAAQ,CAACC,SAAT,CAAmBC,IAHvC;AAIQ,QAAA,QAAQ,EAAG,KAAKC,KAAL,CAAWC,QAJ9B;AAKQ,QAAA,cAAc,EAAGJ,QAAQ,CAACK,SAAT,CAAmBC,KAAnB,CAAyBd,MALlD;AAMQ,QAAA,cAAc,EAAGQ,QAAQ,CAACC,SAAT,CAAmBK,KAAnB,CAAyBd,MANlD;AAOQ,QAAA,EAAE,EAAGQ,QAAQ,CAACO,EAPtB;AAQQ,QAAA,SAAS,EAAGC,SARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHL,CAAP;AAcH;;;;EAvCc3B,S;;AAwClB;;AAED,IAAM4B,eAAe,GAAG,SAAlBA,eAAkB,CAACN,KAAD,EAAW;AAC/B,SAAO;AACHO,IAAAA,SAAS,EAAEP,KAAK,CAACO,SADd;AAEHC,IAAAA,KAAK,EAAER,KAAK,CAACQ,KAFV;AAGHjB,IAAAA,QAAQ,EAAES,KAAK,CAACS,UAAN,CAAiBlB,QAAjB,IAA6B;AAHpC,GAAP;AAKH,CAND;;AAQA,eAAeX,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Navbar from \"./../Navbar/Navbar\";\nimport QuestionCard from \"./../QuestionCard/QuestionCard\";\nimport './Poll.css';\n\nclass Poll extends Component {\n\n    render() {\n        let authed = false; \n    \n        if (document.cookie) {\n        const parts = document.cookie.split(\"=\");\n\n        if (parts.length) {\n            authed = parts[1];\n        }\n        }\n    \n        if (!this.props.username && !authed) {\n            return <Redirect to=\"/\" />\n        }\n\n        let qid;\n\n        if (this.props.questionId) {\n            qid = this.props.questionId;\n        } else {\n            qid = window.location.pathname.split(\"/\")[2];\n        }\n\n        return <div className=\"result\" >\n                    <Navbar />\n                    <h1>Would you rather ... ?</h1> \n                    <QuestionCard author=\"\" key=\"1\"\n                            authedUser=\"\"\n                            optionOne=\"Eins 1\"\n                            optionTwo={ question.optionTwo.text }\n                            answered={ this.state.answered } \n                            countOptionOne={ question.optionOne.votes.length }\n                            countOptionTwo={ question.optionTwo.votes.length }\n                            id={ question.id }\n                            avatarUrl={ avatarUrl }\n                            />         \n                </div>\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n        users: state.users,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nexport default connect(mapStateToProps)(Poll);"]},"metadata":{},"sourceType":"module"}