{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './Result.css';\nimport QuestionDetails from '../QuestionDetails/QuestionDetails';\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result() {\n    _classCallCheck(this, Result);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Result).apply(this, arguments));\n  }\n\n  _createClass(Result, [{\n    key: \"render\",\n    value: function render() {\n      var qid;\n\n      if (this.props.questionId) {\n        qid = this.props.questionId;\n      } else {\n        qid = window.location.pathname.split(\"/\")[2];\n      }\n\n      var question = Object.values(this.props.questions).find(function (question) {\n        return question.id === qid;\n      });\n      console.log(question);\n      console.log(this.props.questions);\n      var sum = parseInt(question.optionOne.votes.length) + parseInt(question.optionTwo.votes.length);\n\n      var computePercentage = function computePercentage(option) {\n        return option * 100 / sum;\n      };\n\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Current Poll Result\"), React.createElement(\"div\", {\n        className: \"optionResult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Votes:\"), \" \", question.optionOne.votes.length, \" - \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Percentage: \"), computePercentage(question.optionOne.votes.length), \"%\")), React.createElement(\"div\", {\n        className: \"optionResult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, question.optionTwo.text), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Votes:\"), \" \", question.optionOne.votes.length, \" - \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Percentage: \"), computePercentage(question.optionOne.votes.length), \"%\")));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions\n  };\n};\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js"],"names":["React","Component","connect","QuestionDetails","Result","qid","props","questionId","window","location","pathname","split","question","Object","values","questions","find","id","console","log","sum","parseInt","optionOne","votes","length","optionTwo","computePercentage","option","text","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;IAEMC,M;;;;;;;;;;;;;6BACO;AACL,UAAIC,GAAJ;;AAEA,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACvBF,QAAAA,GAAG,GAAG,KAAKC,KAAL,CAAWC,UAAjB;AACH,OAFD,MAEO;AACHF,QAAAA,GAAG,GAAGG,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAN;AACH;;AAED,UAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKR,KAAL,CAAWS,SAAzB,EAAoCC,IAApC,CAAyC,UAACJ,QAAD,EAAc;AAClE,eAAOA,QAAQ,CAACK,EAAT,KAAgBZ,GAAvB;AACH,OAFc,CAAf;AAIAa,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWS,SAAvB;AAEA,UAAMK,GAAG,GAAGC,QAAQ,CAACT,QAAQ,CAACU,SAAT,CAAmBC,KAAnB,CAAyBC,MAA1B,CAAR,GACNH,QAAQ,CAACT,QAAQ,CAACa,SAAT,CAAmBF,KAAnB,CAAyBC,MAA1B,CADd;;AAGA,UAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AAClC,eAAQA,MAAM,GAAG,GAAV,GAAiBP,GAAxB;AACH,OAFD;;AAIA,aAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADG,EAEH;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BR,QAAQ,CAACU,SAAT,CAAmBM,IAA/C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACoBhB,QAAQ,CAACU,SAAT,CAAmBC,KAAnB,CAAyBC,MAD7C,SACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADxD,EAESE,iBAAiB,CAACd,QAAQ,CAACU,SAAT,CAAmBC,KAAnB,CAAyBC,MAA1B,CAF1B,MAFJ,CAFG,EASH;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BZ,QAAQ,CAACa,SAAT,CAAmBG,IAA/C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACoBhB,QAAQ,CAACU,SAAT,CAAmBC,KAAnB,CAAyBC,MAD7C,SACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADxD,EAESE,iBAAiB,CAACd,QAAQ,CAACU,SAAT,CAAmBC,KAAnB,CAAyBC,MAA1B,CAF1B,MAFJ,CATG,CAAP;AAiBH;;;;EAzCgBvB,S;;AA0CpB;;AAED,IAAM4B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHf,IAAAA,SAAS,EAAEe,KAAK,CAACf;AADd,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAAC2B,eAAD,CAAP,CAAyBzB,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\nimport './Result.css';\nimport QuestionDetails from '../QuestionDetails/QuestionDetails';\n\nclass Result extends Component {\n    render() {\n        let qid;\n\n        if (this.props.questionId) {\n            qid = this.props.questionId;\n        } else {\n            qid = window.location.pathname.split(\"/\")[2];\n        }\n\n        let question = Object.values(this.props.questions).find((question) => {\n            return question.id === qid;\n        });\n\n        console.log(question);\n        console.log(this.props.questions);\n\n        const sum = parseInt(question.optionOne.votes.length)\n            + parseInt(question.optionTwo.votes.length);\n        \n        const computePercentage = (option) => {\n            return (option * 100) / sum;\n        }\n        \n        return <div className=\"result\" >\n            <h2>Current Poll Result</h2>\n            <div className=\"optionResult\">\n                <div className=\"question\">{ question.optionOne.text }</div>\n                <div>\n                    <b>Votes:</b> { question.optionOne.votes.length } - <b>Percentage: </b> \n                        {computePercentage(question.optionOne.votes.length)}%\n                </div>\n            </div>\n            <div className=\"optionResult\">\n                <div className=\"question\">{ question.optionTwo.text }</div>\n                <div>\n                    <b>Votes:</b> { question.optionOne.votes.length } - <b>Percentage: </b> \n                        {computePercentage(question.optionOne.votes.length)}%\n                </div>\n            </div>\n        </div>\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n    };\n}\n\nexport default connect(mapStateToProps)(Result);"]},"metadata":{},"sourceType":"module"}