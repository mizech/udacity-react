{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js\";\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport './Result.css';\n\nvar Result = function Result(props) {\n  console.log(_this.props);\n  var sum = parseInt(props.countOptionOne) + parseInt(props.countOptionTwo);\n\n  var computePercentage = function computePercentage(option) {\n    return option * 100 / sum;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Current Poll Result\"), React.createElement(\"div\", {\n    className: \"optionResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.optionOne), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Votes:\"), \" \", props.countOptionOne, \" - \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Percentage: \"), computePercentage(props.countOptionOne), \"%\")), React.createElement(\"div\", {\n    className: \"optionResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.optionTwo), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Votes:\"), \" \", props.countOptionTwo, \" - \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Percentage: \"), computePercentage(props.countOptionTwo), \"%\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions\n  };\n};\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js"],"names":["React","connect","Result","props","console","log","sum","parseInt","countOptionOne","countOptionTwo","computePercentage","option","optionOne","optionTwo","mapStateToProps","state","questions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACF,KAAjB;AAEA,MAAMG,GAAG,GAAGC,QAAQ,CAACJ,KAAK,CAACK,cAAP,CAAR,GACND,QAAQ,CAACJ,KAAK,CAACM,cAAP,CADd;;AAGA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AAClC,WAAQA,MAAM,GAAG,GAAV,GAAiBL,GAAxB;AACH,GAFD;;AAIA,SAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADG,EAEH;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,KAAK,CAACS,SAAlC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACoBT,KAAK,CAACK,cAD1B,SAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD7C,EAESE,iBAAiB,CAACP,KAAK,CAACK,cAAP,CAF1B,MAFJ,CAFG,EASH;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,KAAK,CAACU,SAAlC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACoBV,KAAK,CAACM,cAD1B,SAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD7C,EAESC,iBAAiB,CAACP,KAAK,CAACM,cAAP,CAF1B,MAFJ,CATG,CAAP;AAiBH,CA3BD;;AA6BA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADd,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAACa,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from \"react-redux\";\nimport './Result.css';\n\nconst Result = (props) => {\n    console.log(this.props);\n\n    const sum = parseInt(props.countOptionOne)\n        + parseInt(props.countOptionTwo);\n    \n    const computePercentage = (option) => {\n        return (option * 100) / sum;\n    }\n    \n    return <div className=\"result\" >\n        <h2>Current Poll Result</h2>\n        <div className=\"optionResult\">\n            <div className=\"question\">{ props.optionOne }</div>\n            <div>\n                <b>Votes:</b> { props.countOptionOne } - <b>Percentage: </b> \n                    {computePercentage(props.countOptionOne)}%\n            </div>\n        </div>\n        <div className=\"optionResult\">\n            <div className=\"question\">{ props.optionTwo }</div>\n            <div>\n                <b>Votes:</b> { props.countOptionTwo } - <b>Percentage: </b> \n                    {computePercentage(props.countOptionTwo)}%\n            </div>\n        </div>\n    </div>\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n    };\n}\n\nexport default connect(mapStateToProps)(Result);"]},"metadata":{},"sourceType":"module"}