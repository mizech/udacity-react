{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/QuestionDetails/QuestionDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport QuestionCard from \"./../QuestionCard/QuestionCard\";\nimport \"./QuestionDetails.css\";\n\nvar QuestionDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionDetails, _Component);\n\n  function QuestionDetails() {\n    _classCallCheck(this, QuestionDetails);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuestionDetails).apply(this, arguments));\n  }\n\n  _createClass(QuestionDetails, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.username) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      }\n\n      var searchedQuestionId = this.props.match.params.question_id;\n      var question = Object.values(this.props.questions).find(function (question) {\n        return question.id === searchedQuestionId;\n      });\n      console.log(question);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Would you rather ... ?\"), \"import Result from \\\"../Result/Result\\\";\", React.createElement(QuestionCard, {\n        author: question.author,\n        key: index,\n        authedUser: this.props.username,\n        optionOne: question.optionOne.text,\n        optionTwo: question.optionTwo.text,\n        answered: this.state.answered,\n        countOptionOne: question.optionOne.votes.length,\n        countOptionTwo: question.optionTwo.votes.length,\n        id: question.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return QuestionDetails;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users,\n    questions: state.questions,\n    username: state.authedUser.username || \"\"\n  };\n};\n/*\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        insert: (optionOne, optionTwo) => {\n            dispatch(handleAddQuestion(optionOne, optionTwo));\n        }\n    }\n}\n*/\n\n\nexport default connect(mapStateToProps)(QuestionDetails);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/QuestionDetails/QuestionDetails.js"],"names":["React","Component","connect","Redirect","Navbar","QuestionCard","QuestionDetails","props","username","searchedQuestionId","match","params","question_id","question","Object","values","questions","find","id","console","log","author","index","optionOne","text","optionTwo","state","answered","votes","length","mapStateToProps","users","authedUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,uBAAP;;IAEMC,e;;;;;;;;;;;;;6BACK;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACtB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAMC,kBAAkB,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,WAAnD;AAEA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKR,KAAL,CAAWS,SAAzB,EACQC,IADR,CACa,UAACJ,QAAD,EAAc;AACxB,eAAOA,QAAQ,CAACK,EAAT,KAAgBT,kBAAvB;AACH,OAHA,CAAjB;AAKAU,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,8CAIE,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAGA,QAAQ,CAACQ,MAAhC;AAAyC,QAAA,GAAG,EAAGC,KAA/C;AACoB,QAAA,UAAU,EAAG,KAAKf,KAAL,CAAWC,QAD5C;AAEoB,QAAA,SAAS,EAAGK,QAAQ,CAACU,SAAT,CAAmBC,IAFnD;AAGoB,QAAA,SAAS,EAAGX,QAAQ,CAACY,SAAT,CAAmBD,IAHnD;AAIoB,QAAA,QAAQ,EAAG,KAAKE,KAAL,CAAWC,QAJ1C;AAKoB,QAAA,cAAc,EAAGd,QAAQ,CAACU,SAAT,CAAmBK,KAAnB,CAAyBC,MAL9D;AAMoB,QAAA,cAAc,EAAGhB,QAAQ,CAACY,SAAT,CAAmBG,KAAnB,CAAyBC,MAN9D;AAOoB,QAAA,EAAE,EAAGhB,QAAQ,CAACK,EAPlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAgBD;;;;EA9B2BjB,S;;AAiC9B,IAAM6B,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD,EAAW;AAC/B,SAAO;AACHK,IAAAA,KAAK,EAAEL,KAAK,CAACK,KADV;AAEHf,IAAAA,SAAS,EAAEU,KAAK,CAACV,SAFd;AAGHR,IAAAA,QAAQ,EAAEkB,KAAK,CAACM,UAAN,CAAiBxB,QAAjB,IAA6B;AAHpC,GAAP;AAKH,CAND;AAOA;;;;;;;;;;;AASA,eAAeN,OAAO,CAAC4B,eAAD,CAAP,CAAyBxB,eAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./../Navbar/Navbar\";\nimport QuestionCard from \"./../QuestionCard/QuestionCard\";\nimport \"./QuestionDetails.css\";\n\nclass QuestionDetails extends Component {\n  render() {\n    if (!this.props.username) {\n        return <Redirect to=\"/\" />\n    }\n\n    const searchedQuestionId = this.props.match.params.question_id;\n\n    const question = Object.values(this.props.questions)\n                            .find((question) => {\n                        return question.id === searchedQuestionId;\n                    })\n    \n    console.log(question);\n    return (\n      <div>\n        <Navbar />\n        <h1>Would you rather ... ?</h1>\n        import Result from \"../Result/Result\";\n        <QuestionCard author={ question.author } key={ index }\n                            authedUser={ this.props.username }\n                            optionOne={ question.optionOne.text }\n                            optionTwo={ question.optionTwo.text }\n                            answered={ this.state.answered } \n                            countOptionOne={ question.optionOne.votes.length }\n                            countOptionTwo={ question.optionTwo.votes.length }\n                            id={ question.id }\n                            />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        questions: state.questions,\n        username: state.authedUser.username || \"\"\n    };\n}\n/*\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        insert: (optionOne, optionTwo) => {\n            dispatch(handleAddQuestion(optionOne, optionTwo));\n        }\n    }\n}\n*/\nexport default connect(mapStateToProps)(QuestionDetails);"]},"metadata":{},"sourceType":"module"}