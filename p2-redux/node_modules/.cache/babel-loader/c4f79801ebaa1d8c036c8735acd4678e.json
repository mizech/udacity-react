{"ast":null,"code":"import _slicedToArray from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { _getUsers, _saveQuestion, _getQuestions, _saveQuestionAnswer, _saveNewUser } from './_DATA.js';\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getQuestions()]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        users = _ref2[0],\n        questions = _ref2[1];\n\n    return {\n      users: users,\n      questions: questions\n    };\n  });\n}\nexport function saveQuestion(question) {\n  return _saveQuestion(question);\n}\nexport function saveQuestionAnswer(authedUser, qid, answer) {\n  authedUser = authedUser.toLowerCase().replace(\" \", \"\");\n  return _saveQuestionAnswer({\n    qid: qid,\n    authedUser: authedUser,\n    answer: answer\n  });\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/utils/api.js"],"names":["_getUsers","_saveQuestion","_getQuestions","_saveQuestionAnswer","_saveNewUser","getInitialData","Promise","all","then","users","questions","saveQuestion","question","saveQuestionAnswer","authedUser","qid","answer","toLowerCase","replace"],"mappings":";AAAA,SACEA,SADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,mBAJF,EAKEC,YALF,QAMO,YANP;AAQA,OAAO,SAASC,cAAT,GAA2B;AAChC,SAAOC,OAAO,CAACC,GAAR,CAAY,CACjBP,SAAS,EADQ,EAEjBE,aAAa,EAFI,CAAZ,EAGJM,IAHI,CAGC;AAAA;AAAA,QAAEC,KAAF;AAAA,QAASC,SAAT;;AAAA,WAAyB;AAC/BD,MAAAA,KAAK,EAALA,KAD+B;AAE/BC,MAAAA,SAAS,EAATA;AAF+B,KAAzB;AAAA,GAHD,CAAP;AAOD;AAED,OAAO,SAASC,YAAT,CAAuBC,QAAvB,EAAiC;AACtC,SAAOX,aAAa,CAACW,QAAD,CAApB;AACD;AAED,OAAO,SAASC,kBAAT,CAA6BC,UAA7B,EAAyCC,GAAzC,EAA8CC,MAA9C,EAAsD;AAC3DF,EAAAA,UAAU,GAAGA,UAAU,CAACG,WAAX,GAAyBC,OAAzB,CAAiC,GAAjC,EAAsC,EAAtC,CAAb;AACA,SAAOf,mBAAmB,CAAC;AACzBY,IAAAA,GAAG,EAAHA,GADyB;AAEzBD,IAAAA,UAAU,EAAVA,UAFyB;AAGzBE,IAAAA,MAAM,EAANA;AAHyB,GAAD,CAA1B;AAKD","sourcesContent":["import {\n  _getUsers,\n  _saveQuestion,\n  _getQuestions,\n  _saveQuestionAnswer,\n  _saveNewUser\n} from './_DATA.js'\n\nexport function getInitialData () {\n  return Promise.all([\n    _getUsers(),\n    _getQuestions(),\n  ]).then(([users, questions]) => ({\n    users,\n    questions\n  }))\n}\n\nexport function saveQuestion (question) {\n  return _saveQuestion(question)\n}\n\nexport function saveQuestionAnswer (authedUser, qid, answer) {\n  authedUser = authedUser.toLowerCase().replace(\" \", \"\")\n  return _saveQuestionAnswer({\n    qid,\n    authedUser,\n    answer\n  });\n}"]},"metadata":{},"sourceType":"module"}