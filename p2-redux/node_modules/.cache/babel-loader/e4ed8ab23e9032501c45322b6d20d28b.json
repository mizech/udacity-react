{"ast":null,"code":"import { ADD_QUESTION, RECEIVE_QUESTIONS } from \"./types\";\nimport { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { handleInitialData } from \"./shared\";\nexport var addQuestion = function addQuestion(questions) {\n  return {\n    type: ADD_QUESTION,\n    questions: questions\n  };\n};\nexport var receiveQuestions = function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions: questions\n  };\n};\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    dispatch(showLoading());\n    return saveQuestion({\n      optionOneText: optionOneText,\n      optionTwoText: optionTwoText,\n      author: authedUser\n    }).then(function () {\n      dispatch(handleInitialData());\n      dispatch(hideLoading());\n    });\n  };\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/actions/questions.js"],"names":["ADD_QUESTION","RECEIVE_QUESTIONS","saveQuestion","saveQuestionAnswer","handleInitialData","addQuestion","questions","type","receiveQuestions","handleAddQuestion","optionOneText","optionTwoText","dispatch","getState","authedUser","showLoading","author","then","hideLoading"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,QAAgD,SAAhD;AACA,SAAQC,YAAR,EAAsBC,kBAAtB,QAA+C,cAA/C;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEP,YADH;AAEHM,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,SAAD,EAAe;AAC3C,SAAO;AACHC,IAAAA,IAAI,EAAEN,iBADH;AAEHK,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,SAASG,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC5D,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBACNA,QAAQ,EADF;AAAA,QACpBC,UADoB,aACpBA,UADoB;;AAE3BF,IAAAA,QAAQ,CAACG,WAAW,EAAZ,CAAR;AACA,WAAOb,YAAY,CAAC;AAChBQ,MAAAA,aAAa,EAAbA,aADgB;AAEhBC,MAAAA,aAAa,EAAbA,aAFgB;AAGhBK,MAAAA,MAAM,EAAEF;AAHQ,KAAD,CAAZ,CAKFG,IALE,CAKG,YAAM;AACRL,MAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACAQ,MAAAA,QAAQ,CAACM,WAAW,EAAZ,CAAR;AACH,KARE,CAAP;AASH,GAZD;AAaH","sourcesContent":["import { ADD_QUESTION, RECEIVE_QUESTIONS } from \"./types\";\nimport {saveQuestion, saveQuestionAnswer} from \"../utils/api\"\nimport {handleInitialData} from \"./shared\";\n\nexport const addQuestion = (questions) => {\n    return {\n        type: ADD_QUESTION,\n        questions\n    }\n}\n\nexport const receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    return (dispatch, getState) => {\n        const {authedUser} = getState()\n        dispatch(showLoading())\n        return saveQuestion({\n            optionOneText,\n            optionTwoText,\n            author: authedUser\n        })\n            .then(() => {\n                dispatch(handleInitialData())\n                dispatch(hideLoading())\n            })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}