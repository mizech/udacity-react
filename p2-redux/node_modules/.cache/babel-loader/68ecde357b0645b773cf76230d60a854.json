{"ast":null,"code":"import { ADD_QUESTION, RECEIVE_QUESTIONS } from \"./types\";\nimport { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { handleInitialData } from \"./shared\";\nexport var addQuestion = function addQuestion(questions) {\n  return {\n    type: ADD_QUESTION,\n    questions: questions\n  };\n};\nexport var receiveQuestions = function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions: questions\n  };\n};\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return function (dispatch, getState) {\n    var currentState = getState();\n    console.log(\"State\");\n    console.log(getState());\n    var authedUser = currentState.authedUser.username;\n    return saveQuestion({\n      optionOneText: optionOneText,\n      optionTwoText: optionTwoText,\n      author: authedUser\n    }).then(function () {\n      dispatch(handleInitialData());\n    });\n  };\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/actions/questions.js"],"names":["ADD_QUESTION","RECEIVE_QUESTIONS","saveQuestion","saveQuestionAnswer","handleInitialData","addQuestion","questions","type","receiveQuestions","handleAddQuestion","optionOneText","optionTwoText","dispatch","getState","currentState","console","log","authedUser","username","author","then"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,QAAgD,SAAhD;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,cAAjD;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEP,YADH;AAEHM,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,SAAD,EAAe;AAC3C,SAAO;AACHC,IAAAA,IAAI,EAAEN,iBADH;AAEHK,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,SAASG,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC5D,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3B,QAAMC,YAAY,GAAGD,QAAQ,EAA7B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,EAApB;AACA,QAAMI,UAAU,GAAGH,YAAY,CAACG,UAAb,CAAwBC,QAA3C;AAEA,WAAOhB,YAAY,CAAC;AAChBQ,MAAAA,aAAa,EAAbA,aADgB;AAEhBC,MAAAA,aAAa,EAAbA,aAFgB;AAGhBQ,MAAAA,MAAM,EAAEF;AAHQ,KAAD,CAAZ,CAKFG,IALE,CAKG,YAAM;AACRR,MAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACH,KAPE,CAAP;AAQH,GAdD;AAeH","sourcesContent":["import { ADD_QUESTION, RECEIVE_QUESTIONS } from \"./types\";\nimport { saveQuestion, saveQuestionAnswer } from \"../utils/api\"\nimport {handleInitialData} from \"./shared\";\n\nexport const addQuestion = (questions) => {\n    return {\n        type: ADD_QUESTION,\n        questions\n    }\n}\n\nexport const receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    return (dispatch, getState) => {\n        const currentState = getState();\n        console.log(\"State\");\n        console.log(getState());\n        const authedUser = currentState.authedUser.username;\n  \n        return saveQuestion({\n            optionOneText,\n            optionTwoText,\n            author: authedUser\n        })\n            .then(() => {\n                dispatch(handleInitialData())\n            })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}