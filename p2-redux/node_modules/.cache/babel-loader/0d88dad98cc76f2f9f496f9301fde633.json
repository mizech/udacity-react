{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/QuestionCard/QuestionCard.js\";\n\nimport React from 'react';\nimport Result from \"../Result/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleAnswerQuestion } from \"./../../actions/questions\";\nimport './QuestionCard.css';\n\nvar QuestionCard = function QuestionCard(props) {\n  var bottomPart = null;\n\n  if (!props.answered) {\n    var url = \"/questions/\" + props.id;\n    bottomPart = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option optionOne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Link, {\n      onClick: function onClick() {\n        console.log(_this.props);\n\n        _this.props.handleSelect(props.id, \"OptionOne\");\n      },\n      className: \"option-link\",\n      to: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Option 1: \", props.optionOne)), React.createElement(\"div\", {\n      className: \"option optionTwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"option-link\",\n      to: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Option 2: \", props.optionTwo)), React.createElement(\"p\", {\n      className: \"hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Please select one option by clicking on it!\"));\n  } else {\n    bottomPart = React.createElement(Result, {\n      optionOne: props.optionOne,\n      optionTwo: props.optionTwo,\n      countOptionOne: props.countOptionOne,\n      countOptionTwo: props.countOptionTwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"question-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Author: \", props.authedUser), bottomPart);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users,\n    questions: state.questions,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleSelect: function handleSelect(questionId, answer) {\n      dispatch(handleAnswerQuestion(questionId, answer));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCard);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/QuestionCard/QuestionCard.js"],"names":["React","Result","Link","connect","handleAnswerQuestion","QuestionCard","props","bottomPart","answered","url","id","console","log","handleSelect","optionOne","optionTwo","countOptionOne","countOptionTwo","authedUser","mapStateToProps","state","users","questions","username","mapDispatchToProps","dispatch","questionId","answer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,OAAO,oBAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,MAAIC,UAAU,GAAG,IAAjB;;AAEA,MAAI,CAACD,KAAK,CAACE,QAAX,EAAqB;AACjB,QAAMC,GAAG,GAAG,gBAAgBH,KAAK,CAACI,EAAlC;AAEAH,IAAAA,UAAU,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,mBAAM;AACjBI,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACN,KAAjB;;AACA,QAAA,KAAI,CAACA,KAAL,CAAWO,YAAX,CAAwBP,KAAK,CAACI,EAA9B,EAAkC,WAAlC;AACH,OAHD;AAGG,MAAA,SAAS,EAAC,aAHb;AAG2B,MAAA,EAAE,EAAGD,GAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGkDH,KAAK,CAACQ,SAHxD,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAGL,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqDH,KAAK,CAACS,SAA3D,CADJ,CAPJ,EAUI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAVJ,CADJ;AAcH,GAjBD,MAiBO;AACHR,IAAAA,UAAU,GAAG,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAGD,KAAK,CAACQ,SAA1B;AACQ,MAAA,SAAS,EAAGR,KAAK,CAACS,SAD1B;AAEQ,MAAA,cAAc,EAAGT,KAAK,CAACU,cAF/B;AAGQ,MAAA,cAAc,EAAGV,KAAK,CAACW,cAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AAIH;;AAED,SAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcX,KAAK,CAACY,UAApB,CADG,EAEFX,UAFE,CAAP;AAIH,CA/BD;;AAkCA,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHC,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAFd;AAGHC,IAAAA,QAAQ,EAAEH,KAAK,CAACF,UAAN,CAAiBK,QAAjB,IAA6B;AAHpC,GAAP;AAKH,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHZ,IAAAA,YAAY,EAAE,sBAACa,UAAD,EAAaC,MAAb,EAAwB;AAClCF,MAAAA,QAAQ,CAACrB,oBAAoB,CAACsB,UAAD,EAAaC,MAAb,CAArB,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAexB,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,YAA7C,CAAf","sourcesContent":["import React from 'react';\n\nimport Result from \"../Result/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleAnswerQuestion } from \"./../../actions/questions\";\nimport './QuestionCard.css';\n\nconst QuestionCard = (props) => {\n    let bottomPart = null;\n\n    if (!props.answered) {\n        const url = \"/questions/\" + props.id;\n\n        bottomPart = (\n            <div>\n                <div className=\"option optionOne\">\n                    <Link onClick={() => {\n                        console.log(this.props);\n                        this.props.handleSelect(props.id, \"OptionOne\");\n                    }} className=\"option-link\" to={ url }>Option 1: { props.optionOne }</Link>\n                </div>\n                <div className=\"option optionTwo\">\n                    <Link className=\"option-link\" to={ url }>Option 2: { props.optionTwo }</Link>\n                </div>\n                <p className=\"hint\">Please select one option by clicking on it!</p>\n            </div>\n        );\n    } else {\n        bottomPart = <Result optionOne={ props.optionOne } \n                             optionTwo={ props.optionTwo } \n                             countOptionOne={ props.countOptionOne }\n                             countOptionTwo={ props.countOptionTwo } />\n    }\n\n    return <div className=\"question-card\" >\n        <h3>Author: { props.authedUser }</h3>\n        {bottomPart}\n    </div>\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        questions: state.questions,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSelect: (questionId, answer) => {\n            dispatch(handleAnswerQuestion(questionId, answer));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCard);"]},"metadata":{},"sourceType":"module"}