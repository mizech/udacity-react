{"ast":null,"code":"import { ADD_QUESTION, RECEIVE_QUESTIONS } from \"./types\";\nimport { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { handleInitialData } from \"./shared\";\nexport var addQuestion = function addQuestion(questions) {\n  return {\n    type: ADD_QUESTION,\n    questions: questions\n  };\n};\nexport var receiveQuestions = function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions: questions\n  };\n};\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return function (dispatch, getState) {\n    var currentState = getState();\n    var authedUser = currentState.authedUser.username.toLowerCase().replace(\" \", \"\");\n    return saveQuestion({\n      optionOneText: optionOneText,\n      optionTwoText: optionTwoText,\n      author: authedUser\n    }).then(function () {\n      dispatch(handleInitialData());\n    });\n  };\n}\nexport function handleAnswerQuestion(qid, answer) {\n  return function (dispatch, getState) {\n    var authUser = getState().authedUser.username;\n    console.log(\"Auth\", authUser);\n    console.log(\"qid\", qid);\n    console.log(\"answer\", answer);\n    return saveQuestionAnswer(authUser, qid, answer).then(function () {\n      dispatch(handleInitialData);\n    });\n  };\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/actions/questions.js"],"names":["ADD_QUESTION","RECEIVE_QUESTIONS","saveQuestion","saveQuestionAnswer","handleInitialData","addQuestion","questions","type","receiveQuestions","handleAddQuestion","optionOneText","optionTwoText","dispatch","getState","currentState","authedUser","username","toLowerCase","replace","author","then","handleAnswerQuestion","qid","answer","authUser","console","log"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,QAAgD,SAAhD;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,cAAjD;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEP,YADH;AAEHM,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,SAAD,EAAe;AAC3C,SAAO;AACHC,IAAAA,IAAI,EAAEN,iBADH;AAEHK,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,SAASG,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC5D,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3B,QAAMC,YAAY,GAAGD,QAAQ,EAA7B;AACA,QAAME,UAAU,GAAGD,YAAY,CACVC,UADF,CACaC,QADb,CAEEC,WAFF,GAEgBC,OAFhB,CAEwB,GAFxB,EAE6B,EAF7B,CAAnB;AAIA,WAAOhB,YAAY,CAAC;AAChBQ,MAAAA,aAAa,EAAbA,aADgB;AAEhBC,MAAAA,aAAa,EAAbA,aAFgB;AAGhBQ,MAAAA,MAAM,EAAEJ;AAHQ,KAAD,CAAZ,CAKFK,IALE,CAKG,YAAM;AACRR,MAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACH,KAPE,CAAP;AAQH,GAdD;AAeH;AAED,OAAO,SAASiB,oBAAT,CAA8BC,GAA9B,EAAmCC,MAAnC,EAA2C;AAC9C,SAAO,UAACX,QAAD,EAAWC,QAAX,EAAwB;AAC3B,QAAMW,QAAQ,GAAIX,QAAQ,EAAT,CAAaE,UAAb,CAAwBC,QAAzC;AAIAS,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AAEA,WAAOpB,kBAAkB,CAACqB,QAAD,EAAWF,GAAX,EAAgBC,MAAhB,CAAlB,CACEH,IADF,CACO,YAAM;AACRR,MAAAA,QAAQ,CAACR,iBAAD,CAAR;AACH,KAHF,CAAP;AAIH,GAbD;AAcH","sourcesContent":["import { ADD_QUESTION, RECEIVE_QUESTIONS } from \"./types\";\nimport { saveQuestion, saveQuestionAnswer } from \"../utils/api\"\nimport {handleInitialData} from \"./shared\";\n\nexport const addQuestion = (questions) => {\n    return {\n        type: ADD_QUESTION,\n        questions\n    }\n}\n\nexport const receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    return (dispatch, getState) => {\n        const currentState = getState();\n        const authedUser = currentState\n                            .authedUser.username\n                            .toLowerCase().replace(\" \", \"\");\n     \n        return saveQuestion({\n            optionOneText,\n            optionTwoText,\n            author: authedUser\n        })\n            .then(() => {\n                dispatch(handleInitialData())\n            })\n    }\n}\n\nexport function handleAnswerQuestion(qid, answer) {\n    return (dispatch, getState) => {\n        const authUser = (getState()).authedUser.username;\n        \n                                   \n\n        console.log(\"Auth\", authUser);\n        console.log(\"qid\", qid);\n        console.log(\"answer\", answer);\n\n        return saveQuestionAnswer(authUser, qid, answer)\n                .then(() => {\n                    dispatch(handleInitialData);\n                });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}