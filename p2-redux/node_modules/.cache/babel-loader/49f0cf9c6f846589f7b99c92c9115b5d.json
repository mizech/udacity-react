{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/QuestionCard/QuestionCard.js\";\nimport React, { Component } from 'react';\nimport Result from \"../Result/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleAnswerQuestion } from \"./../../actions/questions\";\nimport './QuestionCard.css';\n\nvar QuestionCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionCard, _Component);\n\n  function QuestionCard() {\n    _classCallCheck(this, QuestionCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuestionCard).apply(this, arguments));\n  }\n\n  _createClass(QuestionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var bottomPart = null;\n\n      if (!this.props.answered) {\n        var url = \"/questions/\" + this.props.id;\n        bottomPart = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"option optionOne\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Link, {\n          onClick: function onClick(event) {\n            var option = event.target.dataset.option;\n            console.log(_this.props);\n            alert(option);\n\n            _this.props.handleSelect(_this.props.id, event.target.textContent);\n          },\n          className: \"option-link\",\n          \"data-option\": \"optionOne\",\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Option 1: \", this.props.optionOne)), React.createElement(\"div\", {\n          className: \"option optionTwo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: \"option-link\",\n          \"data-option\": \"optionTwo\",\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Option 2: \", this.props.optionTwo)), React.createElement(\"p\", {\n          className: \"hint\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Please select one option by clicking on it!\"));\n      } else {\n        bottomPart = React.createElement(Result, {\n          optionOne: this.props.optionOne,\n          optionTwo: this.props.optionTwo,\n          countOptionOne: this.props.countOptionOne,\n          countOptionTwo: this.props.countOptionTwo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Author: \", this.props.authedUser), bottomPart);\n    }\n  }]);\n\n  return QuestionCard;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users,\n    questions: state.questions,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleSelect: function handleSelect(questionId, answer) {\n      dispatch(handleAnswerQuestion(questionId, answer));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCard);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/QuestionCard/QuestionCard.js"],"names":["React","Component","Result","Link","connect","handleAnswerQuestion","QuestionCard","bottomPart","props","answered","url","id","event","option","target","dataset","console","log","alert","handleSelect","textContent","optionOne","optionTwo","countOptionOne","countOptionTwo","authedUser","mapStateToProps","state","users","questions","username","mapDispatchToProps","dispatch","questionId","answer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Result from \"../Result/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleAnswerQuestion } from \"./../../actions/questions\";\nimport './QuestionCard.css';\n\nclass QuestionCard extends Component {\n    render() {\n        let bottomPart = null;\n\n        if (!this.props.answered) {\n            const url = \"/questions/\" + this.props.id;\n\n            bottomPart = (\n                <div>\n                    <div className=\"option optionOne\">\n                        <Link onClick={(event) => {\n                            const option = event.target.dataset.option;\n                            console.log(this.props);\n                            alert(option);\n                            \n                            this.props.handleSelect(this.props.id, event.target.textContent);\n                        }} className=\"option-link\" data-option=\"optionOne\"\n                        to={ url }>Option 1: { this.props.optionOne }</Link>\n                    </div>\n                    <div className=\"option optionTwo\">\n                        <Link className=\"option-link\" data-option=\"optionTwo\"\n                            to={ url }>Option 2: { this.props.optionTwo }</Link>\n                    </div>\n                    <p className=\"hint\">Please select one option by clicking on it!</p>\n                </div>\n            );\n        } else {\n            bottomPart = <Result optionOne={ this.props.optionOne } \n                                optionTwo={ this.props.optionTwo } \n                                countOptionOne={ this.props.countOptionOne }\n                                countOptionTwo={ this.props.countOptionTwo } />\n        }\n\n        return <div className=\"question-card\" >\n            <h3>Author: { this.props.authedUser }</h3>\n            {bottomPart}\n        </div>\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        questions: state.questions,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSelect: (questionId, answer) => {\n            dispatch(handleAnswerQuestion(questionId, answer));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCard);"]},"metadata":{},"sourceType":"module"}