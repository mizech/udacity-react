{"ast":null,"code":"import _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Leaderboard/Leaderboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport \"./Leaderboard.css\";\n\nvar User = function User(name) {\n  _classCallCheck(this, User);\n\n  this.createdQuestions = 0;\n  this.answeredQuestions = 0;\n};\n\nvar Leaderboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Leaderboard, _Component);\n\n  function Leaderboard() {\n    _classCallCheck(this, Leaderboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Leaderboard).apply(this, arguments));\n  }\n\n  _createClass(Leaderboard, [{\n    key: \"render\",\n    value: function render() {\n      var authed = document.cookie.split(\"=\")[1];\n\n      if (JSON.parse(authed) === false) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.username) {\n        var users = Object.values(this.props.users);\n        var status = [];\n        var questions = Object.values(this.props.questions);\n        users.forEach(function (user) {\n          status[user.name.toLowerCase().replace(\" \", \"\")] = new User();\n        });\n        questions.forEach(function (question) {\n          var status = status[question.author];\n          status[question.author].createdQuestions++;\n          question.optionOne.votes.forEach(function (voted) {\n            status[voted].answeredQuestions++;\n          });\n          question.optionTwo.votes.forEach(function (voted) {\n            status[voted].answeredQuestions++;\n          });\n        });\n\n        var _userProfil = users.map(function (user, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"user-profil\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"user-avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: user.avatarURL,\n            alt: \"avatar-image\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"user-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, user.name), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"Created questions: \"), status[user.id].createdQuestions), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Answered questions: \"), status[user.id].answeredQuestions)));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Leaderboard\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, userProfil));\n    }\n  }]);\n\n  return Leaderboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions,\n    users: state.users,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Leaderboard/Leaderboard.js"],"names":["React","Component","connect","Redirect","Navbar","User","name","createdQuestions","answeredQuestions","Leaderboard","authed","document","cookie","split","JSON","parse","props","username","users","Object","values","status","questions","forEach","user","toLowerCase","replace","question","author","optionOne","votes","voted","optionTwo","userProfil","map","index","avatarURL","id","mapStateToProps","state","authedUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./../Navbar/Navbar\";\n\nimport \"./Leaderboard.css\";\n\nclass User {\n  constructor(name) {\n    this.createdQuestions = 0;\n    this.answeredQuestions = 0;\n  }\n}\n\nclass Leaderboard extends Component {\n  render() {\n    let authed = document.cookie.split(\"=\")[1];\n   \n    if (JSON.parse(authed) === false) {\n        return <Redirect to=\"/\" />\n    } \n\n    if (this.props.username) {\n      const users = Object.values(this.props.users);\n    const status = [];\n    const questions = Object.values(this.props.questions);\n\n    users.forEach(user => {\n      status[user.name.toLowerCase().replace(\" \", \"\")] = new User();\n    });\n\n    questions.forEach((question) => {\n      const status = status[question.author];\n        status[question.author].createdQuestions++;\n\n        question.optionOne.votes.forEach((voted) => {\n          status[voted].answeredQuestions++;\n        });\n\n        question.optionTwo.votes.forEach((voted) => {\n          status[voted].answeredQuestions++;\n        });\n    });\n\n    const userProfil = users.map((user, index) => {\n      return <div key={index} className=\"user-profil\">\n        <div className=\"user-avatar\">\n          <img src={ user.avatarURL } alt=\"avatar-image\" />\n        </div>\n        <div className=\"user-status\">\n          <h3>{ user.name }</h3>\n          <p><span>Created questions: </span>{status[user.id].createdQuestions}</p>\n          <p><span>Answered questions: </span>{status[user.id].answeredQuestions}</p>\n        </div>\n      </div>\n    });\n    }\n\n    return (\n      <div>\n        <Navbar />\n        <h1>Leaderboard</h1>\n        <div>\n          { userProfil }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n        users: state.users,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);"]},"metadata":{},"sourceType":"module"}