{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Poll/Poll.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport './Poll.css';\n\nvar Poll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Poll, _Component);\n\n  function Poll() {\n    _classCallCheck(this, Poll);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Poll).apply(this, arguments));\n  }\n\n  _createClass(Poll, [{\n    key: \"createQuestionCards\",\n    value: function createQuestionCards(arrayQuestions) {\n      var _this = this;\n\n      return arrayQuestions.map(function (question, index) {\n        var username = question.author;\n        var avatarUrl;\n\n        if (_this.props.users[username]) {\n          avatarUrl = _this.props.users[username].avatarURL;\n        }\n\n        return React.createElement(QuestionCard, {\n          author: question.author,\n          key: index,\n          authedUser: _this.props.username,\n          optionOne: question.optionOne.text,\n          optionTwo: question.optionTwo.text,\n          answered: _this.state.answered,\n          countOptionOne: question.optionOne.votes.length,\n          countOptionTwo: question.optionTwo.votes.length,\n          id: question.id,\n          avatarUrl: avatarUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var authed = false;\n\n      if (document.cookie) {\n        var parts = document.cookie.split(\"=\");\n\n        if (parts.length) {\n          authed = parts[1];\n        }\n      }\n\n      if (!this.props.username && !authed) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      var qid;\n\n      if (this.props.questionId) {\n        qid = this.props.questionId;\n      } else {\n        qid = window.location.pathname.split(\"/\")[2];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Would you rather ... ?\"));\n    }\n  }]);\n\n  return Poll;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions,\n    users: state.users,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nexport default connect(mapStateToProps)(Poll);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Poll/Poll.js"],"names":["React","Component","Redirect","connect","Navbar","Poll","arrayQuestions","map","question","index","username","author","avatarUrl","props","users","avatarURL","optionOne","text","optionTwo","state","answered","votes","length","id","authed","document","cookie","parts","split","qid","questionId","window","location","pathname","mapStateToProps","questions","authedUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;wCACkBC,c,EAAgB;AAAA;;AAChC,aAAOA,cAAc,CAACC,GAAf,CAAmB,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC7C,YAAMC,QAAQ,GAAGF,QAAQ,CAACG,MAA1B;AACA,YAAIC,SAAJ;;AAEA,YAAI,KAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBJ,QAAjB,CAAJ,EAAgC;AAC9BE,UAAAA,SAAS,GAAG,KAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBJ,QAAjB,EAA2BK,SAAvC;AACD;;AAED,eAAO,oBAAC,YAAD;AAAc,UAAA,MAAM,EAAGP,QAAQ,CAACG,MAAhC;AAAyC,UAAA,GAAG,EAAGF,KAA/C;AACe,UAAA,UAAU,EAAG,KAAI,CAACI,KAAL,CAAWH,QADvC;AAEe,UAAA,SAAS,EAAGF,QAAQ,CAACQ,SAAT,CAAmBC,IAF9C;AAGe,UAAA,SAAS,EAAGT,QAAQ,CAACU,SAAT,CAAmBD,IAH9C;AAIe,UAAA,QAAQ,EAAG,KAAI,CAACE,KAAL,CAAWC,QAJrC;AAKe,UAAA,cAAc,EAAGZ,QAAQ,CAACQ,SAAT,CAAmBK,KAAnB,CAAyBC,MALzD;AAMe,UAAA,cAAc,EAAGd,QAAQ,CAACU,SAAT,CAAmBG,KAAnB,CAAyBC,MANzD;AAOe,UAAA,EAAE,EAAGd,QAAQ,CAACe,EAP7B;AAQe,UAAA,SAAS,EAAGX,SAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUD,OAlBM,CAAP;AAmBD;;;6BAEM;AACL,UAAIY,MAAM,GAAG,KAAb;;AAEA,UAAIC,QAAQ,CAACC,MAAb,EAAqB;AACrB,YAAMC,KAAK,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AAEA,YAAID,KAAK,CAACL,MAAV,EAAkB;AACdE,UAAAA,MAAM,GAAGG,KAAK,CAAC,CAAD,CAAd;AACH;AACA;;AAED,UAAI,CAAC,KAAKd,KAAL,CAAWH,QAAZ,IAAwB,CAACc,MAA7B,EAAqC;AACjC,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAIK,GAAJ;;AAEA,UAAI,KAAKhB,KAAL,CAAWiB,UAAf,EAA2B;AACvBD,QAAAA,GAAG,GAAG,KAAKhB,KAAL,CAAWiB,UAAjB;AACH,OAFD,MAEO;AACHD,QAAAA,GAAG,GAAGE,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBL,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAN;AACH;;AAED,aAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFL,CAAP;AAIH;;;;EAlDc3B,S;;AAmDlB;;AAED,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAACf,KAAD,EAAW;AAC/B,SAAO;AACHgB,IAAAA,SAAS,EAAEhB,KAAK,CAACgB,SADd;AAEHrB,IAAAA,KAAK,EAAEK,KAAK,CAACL,KAFV;AAGHJ,IAAAA,QAAQ,EAAES,KAAK,CAACiB,UAAN,CAAiB1B,QAAjB,IAA6B;AAHpC,GAAP;AAKH,CAND;;AAQA,eAAeP,OAAO,CAAC+B,eAAD,CAAP,CAAyB7B,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Navbar from \"./../Navbar/Navbar\";\nimport './Poll.css';\n\nclass Poll extends Component {\n    createQuestionCards(arrayQuestions) {\n        return arrayQuestions.map((question, index) => {\n          const username = question.author;\n          let avatarUrl;\n       \n          if (this.props.users[username]) {\n            avatarUrl = this.props.users[username].avatarURL;\n          }\n          \n          return <QuestionCard author={ question.author } key={ index }\n                                authedUser={ this.props.username }\n                                optionOne={ question.optionOne.text }\n                                optionTwo={ question.optionTwo.text }\n                                answered={ this.state.answered } \n                                countOptionOne={ question.optionOne.votes.length }\n                                countOptionTwo={ question.optionTwo.votes.length }\n                                id={ question.id }\n                                avatarUrl={ avatarUrl }\n                                />\n        });\n      }\n\n    render() {\n        let authed = false; \n    \n        if (document.cookie) {\n        const parts = document.cookie.split(\"=\");\n\n        if (parts.length) {\n            authed = parts[1];\n        }\n        }\n    \n        if (!this.props.username && !authed) {\n            return <Redirect to=\"/\" />\n        }\n\n        let qid;\n\n        if (this.props.questionId) {\n            qid = this.props.questionId;\n        } else {\n            qid = window.location.pathname.split(\"/\")[2];\n        }\n\n        return <div className=\"result\" >\n                    <Navbar />\n                    <h1>Would you rather ... ?</h1>          \n                </div>\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n        users: state.users,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nexport default connect(mapStateToProps)(Poll);"]},"metadata":{},"sourceType":"module"}