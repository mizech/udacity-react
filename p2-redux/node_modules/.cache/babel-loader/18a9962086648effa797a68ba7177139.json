{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Homepage/Homepage.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport QuestionCard from \"./../QuestionCard/QuestionCard\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport \"./Homepage.css\";\n\nvar Homepage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Homepage, _Component);\n\n  function Homepage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Homepage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Homepage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      answered: false\n    };\n\n    _this.handleClick = function () {\n      _this.setState(function () {\n        return {\n          answered: !_this.state.answered\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Homepage, [{\n    key: \"createQuestionCards\",\n    value: function createQuestionCards(arrayQuestions) {\n      var _this2 = this;\n\n      return arrayQuestions.map(function (question, index) {\n        var username = _this2.props.username.toLowerCase().replace(\" \", \"\");\n\n        return React.createElement(QuestionCard, {\n          author: question.author,\n          key: index,\n          authedUser: _this2.props.username,\n          optionOne: question.optionOne.text,\n          optionTwo: question.optionTwo.text,\n          answered: _this2.state.answered,\n          countOptionOne: question.optionOne.votes.length,\n          countOptionTwo: question.optionTwo.votes.length,\n          id: question.id,\n          avatarUrl: _this2.props.users[username].avatarURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"sortQuestionsDescendingByTimestamp\",\n    value: function sortQuestionsDescendingByTimestamp(a, b) {\n      if (a.timestamp > b.timestamp) {\n        return -1;\n      } else if (a.timestamp < b.timestamp) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var authed = false;\n\n      if (document.cookie) {\n        var parts = document.cookie.split(\"=\");\n\n        if (parts.length) {\n          authed = parts[1];\n        }\n      }\n\n      if (!this.props.username && !authed) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n\n      var questionCards = [];\n\n      if (this.state.answered) {\n        var questionsAnswered = Object.values(this.props.questions).filter(function (question) {\n          return question.optionOne.votes.length > 0 || question.optionTwo.votes.length > 0;\n        }).sort(this.sortQuestionsDescendingByTimestamp);\n        questionCards = this.createQuestionCards(questionsAnswered);\n      } else {\n        var questionsUnanswered = Object.values(this.props.questions).filter(function (question) {\n          return question.optionOne.votes.length === 0 && question.optionTwo.votes.length === 0;\n        }).sort(this.sortQuestionsDescendingByTimestamp);\n        questionCards = this.createQuestionCards(questionsUnanswered);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        username: this.props.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Would you rather ... ?\"), React.createElement(\"a\", {\n        href: \"#\",\n        id: \"toggle\",\n        onClick: this.handleClick,\n        className: \"ghost-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Toggle Un-/Answered Questions\"), questionCards);\n    }\n  }]);\n\n  return Homepage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users,\n    questions: state.questions,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nexport default connect(mapStateToProps)(Homepage);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Homepage/Homepage.js"],"names":["React","Component","connect","Redirect","QuestionCard","Navbar","Homepage","state","answered","handleClick","setState","arrayQuestions","map","question","index","username","props","toLowerCase","replace","author","optionOne","text","optionTwo","votes","length","id","users","avatarURL","a","b","timestamp","authed","document","cookie","parts","split","questionCards","questionsAnswered","Object","values","questions","filter","sort","sortQuestionsDescendingByTimestamp","createQuestionCards","questionsUnanswered","mapStateToProps","authedUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport QuestionCard from \"./../QuestionCard/QuestionCard\";\nimport Navbar from \"./../Navbar/Navbar\";\nimport \"./Homepage.css\";\n\nclass Homepage extends Component {\n  state = {\n    answered: false\n  }\n\n  handleClick = () => {   \n    this.setState(() => {\n      return {\n        answered: !this.state.answered\n      }\n    });   \n  }\n\n  createQuestionCards(arrayQuestions) {\n    return arrayQuestions.map((question, index) => {\n      const username = this.props.username.toLowerCase().replace(\" \", \"\");\n      return <QuestionCard author={ question.author } key={ index }\n                            authedUser={ this.props.username }\n                            optionOne={ question.optionOne.text }\n                            optionTwo={ question.optionTwo.text }\n                            answered={ this.state.answered } \n                            countOptionOne={ question.optionOne.votes.length }\n                            countOptionTwo={ question.optionTwo.votes.length }\n                            id={ question.id }\n                            avatarUrl={this.props.users[username].avatarURL }\n                            />\n    });\n  }\n\n  sortQuestionsDescendingByTimestamp(a, b) {\n    if (a.timestamp > b.timestamp) {\n      return -1;\n    } else if (a.timestamp < b.timestamp) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  render() {\n    let authed = false; \n    \n    if (document.cookie) {\n      const parts = document.cookie.split(\"=\");\n\n      if (parts.length) {\n        authed = parts[1];\n      }\n    }\n   \n    if (!this.props.username && !authed) {\n        return <Redirect to=\"/\" />\n    }\n\n    let questionCards = [];\n\n    if (this.state.answered) {\n        const questionsAnswered = Object.values(this.props.questions).filter((question) => {\n          return question.optionOne.votes.length > 0 || question.optionTwo.votes.length > 0;\n        }).sort(this.sortQuestionsDescendingByTimestamp);\n\n        questionCards = this.createQuestionCards(questionsAnswered);\n    } else {\n        const questionsUnanswered = Object.values(this.props.questions).filter((question) => {\n          return question.optionOne.votes.length === 0 && question.optionTwo.votes.length === 0;\n        }).sort(this.sortQuestionsDescendingByTimestamp);\n\n        questionCards = this.createQuestionCards(questionsUnanswered);\n    }\n\n    return (\n      <div>\n        <Navbar username={ this.props.username } />\n        <h1>Would you rather ... ?</h1>\n        <a href=\"#\" id=\"toggle\" onClick={this.handleClick}\n                    className=\"ghost-button\">Toggle Un-/Answered Questions</a>\n        {questionCards}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users,\n    questions: state.questions,\n    username: state.authedUser.username || \"\"\n  };\n}\n\nexport default connect(mapStateToProps)(Homepage);"]},"metadata":{},"sourceType":"module"}