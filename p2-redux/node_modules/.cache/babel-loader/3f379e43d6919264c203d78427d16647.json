{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './Result.css';\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result() {\n    _classCallCheck(this, Result);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Result).apply(this, arguments));\n  }\n\n  _createClass(Result, [{\n    key: \"render\",\n    value: function render() {\n      console.log(location);\n      var sum = parseInt(this.props.countOptionOne) + parseInt(this.props.countOptionTwo);\n\n      var computePercentage = function computePercentage(option) {\n        return option * 100 / sum;\n      };\n\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Current Poll Result\"), React.createElement(\"div\", {\n        className: \"optionResult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.optionOne), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Votes:\"), \" \", this.props.countOptionOne, \" - \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Percentage: \"), computePercentage(this.props.countOptionOne), \"%\")), React.createElement(\"div\", {\n        className: \"optionResult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.optionTwo), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Votes:\"), \" \", this.props.countOptionTwo, \" - \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Percentage: \"), computePercentage(this.props.countOptionTwo), \"%\")));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions\n  };\n};\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/Result/Result.js"],"names":["React","Component","connect","Result","console","log","location","sum","parseInt","props","countOptionOne","countOptionTwo","computePercentage","option","optionOne","optionTwo","mapStateToProps","state","questions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;;IAEMC,M;;;;;;;;;;;;;6BACO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEA,UAAMC,GAAG,GAAGC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,cAAZ,CAAR,GACNF,QAAQ,CAAC,KAAKC,KAAL,CAAWE,cAAZ,CADd;;AAGA,UAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AAClC,eAAQA,MAAM,GAAG,GAAV,GAAiBN,GAAxB;AACH,OAFD;;AAIA,aAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADG,EAEH;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKE,KAAL,CAAWK,SAAvC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACoB,KAAKL,KAAL,CAAWC,cAD/B,SACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADlD,EAESE,iBAAiB,CAAC,KAAKH,KAAL,CAAWC,cAAZ,CAF1B,MAFJ,CAFG,EASH;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKD,KAAL,CAAWM,SAAvC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACoB,KAAKN,KAAL,CAAWE,cAD/B,SACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADlD,EAESC,iBAAiB,CAAC,KAAKH,KAAL,CAAWE,cAAZ,CAF1B,MAFJ,CATG,CAAP;AAiBH;;;;EA5BgBV,S;;AA6BpB;;AAED,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADd,GAAP;AAGH,CAJD;;AAMA,eAAehB,OAAO,CAACc,eAAD,CAAP,CAAyBb,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\nimport './Result.css';\n\nclass Result extends Component {\n    render() {\n        console.log(location);\n\n        const sum = parseInt(this.props.countOptionOne)\n            + parseInt(this.props.countOptionTwo);\n        \n        const computePercentage = (option) => {\n            return (option * 100) / sum;\n        }\n        \n        return <div className=\"result\" >\n            <h2>Current Poll Result</h2>\n            <div className=\"optionResult\">\n                <div className=\"question\">{ this.props.optionOne }</div>\n                <div>\n                    <b>Votes:</b> { this.props.countOptionOne } - <b>Percentage: </b> \n                        {computePercentage(this.props.countOptionOne)}%\n                </div>\n            </div>\n            <div className=\"optionResult\">\n                <div className=\"question\">{ this.props.optionTwo }</div>\n                <div>\n                    <b>Votes:</b> { this.props.countOptionTwo } - <b>Percentage: </b> \n                        {computePercentage(this.props.countOptionTwo)}%\n                </div>\n            </div>\n        </div>\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions,\n    };\n}\n\nexport default connect(mapStateToProps)(Result);"]},"metadata":{},"sourceType":"module"}