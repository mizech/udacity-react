{"ast":null,"code":"import _classCallCheck from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Library/WebServer/Documents/p2-would-you/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Library/WebServer/Documents/p2-would-you/src/components/QuestionCard/QuestionCard.js\";\nimport React, { Component } from 'react';\nimport Result from \"../Result/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleAnswerQuestion } from \"./../../actions/questions\";\nimport './QuestionCard.css';\n\nvar QuestionCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionCard, _Component);\n\n  function QuestionCard() {\n    _classCallCheck(this, QuestionCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuestionCard).apply(this, arguments));\n  }\n\n  _createClass(QuestionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var bottomPart = null;\n      var qid = this.props.id;\n      console.log(\"Avatar:\", this.props.avatarUrl);\n\n      if (!this.props.answered) {\n        var url = \"/questions/\" + this.props.id;\n        bottomPart = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"option optionOne\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Link, {\n          onClick: function onClick(event) {\n            _this.props.handleSelect(qid, event.target.dataset.option);\n          },\n          className: \"option-link\",\n          \"data-option\": \"optionOne\",\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Option 1: \", this.props.optionOne)), React.createElement(\"div\", {\n          onClick: function onClick(event) {\n            _this.props.handleSelect(qid, event.target.dataset.option);\n          },\n          className: \"option optionTwo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: \"option-link\",\n          \"data-option\": \"optionTwo\",\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Option 2: \", this.props.optionTwo)), React.createElement(\"p\", {\n          className: \"hint\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Please select one option by clicking on it!\"));\n      } else {\n        bottomPart = React.createElement(Result, {\n          questionId: qid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Author: \", this.props.author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"500\",\n        src: this.props.avatarUrl,\n        alt: \"avatar-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), bottomPart);\n    }\n  }]);\n\n  return QuestionCard;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users,\n    questions: state.questions,\n    username: state.authedUser.username || \"\"\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleSelect: function handleSelect(questionId, answer) {\n      dispatch(handleAnswerQuestion(questionId, answer));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCard);","map":{"version":3,"sources":["/Library/WebServer/Documents/p2-would-you/src/components/QuestionCard/QuestionCard.js"],"names":["React","Component","Result","Link","connect","handleAnswerQuestion","QuestionCard","bottomPart","qid","props","id","console","log","avatarUrl","answered","url","event","handleSelect","target","dataset","option","optionOne","optionTwo","author","mapStateToProps","state","users","questions","username","authedUser","mapDispatchToProps","dispatch","questionId","answer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Result from \"../Result/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleAnswerQuestion } from \"./../../actions/questions\";\nimport './QuestionCard.css';\n\nclass QuestionCard extends Component {\n    render() {\n        let bottomPart = null;\n        const qid = this.props.id;\n\n        console.log(\"Avatar:\", this.props.avatarUrl);\n\n        if (!this.props.answered) {\n            const url = \"/questions/\" + this.props.id;\n\n            bottomPart = (\n                <div>\n                    <div className=\"option optionOne\">\n                        <Link onClick={(event) => {\n                            this.props.handleSelect(qid, event.target.dataset.option);\n                        }} className=\"option-link\" data-option=\"optionOne\"\n                        to={ url }>Option 1: { this.props.optionOne }</Link>\n                    </div>\n                    <div onClick={(event) => {\n                            this.props.handleSelect(qid, event.target.dataset.option);\n                        }} className=\"option optionTwo\">\n                        <Link className=\"option-link\" data-option=\"optionTwo\"\n                            to={ url }>Option 2: { this.props.optionTwo }</Link>\n                    </div>\n                    <p className=\"hint\">Please select one option by clicking on it!</p>\n                </div>\n            );\n        } else {\n            bottomPart = <Result questionId={ qid } />\n        }\n\n        return <div className=\"question-card\" >\n            <h3>Author: { this.props.author }</h3>\n            <div>\n                <img width=\"500\" src={ this.props.avatarUrl } alt=\"avatar-image\" />\n            </div>\n            {bottomPart}\n        </div>\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        questions: state.questions,\n        username: state.authedUser.username || \"\"\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSelect: (questionId, answer) => {\n            dispatch(handleAnswerQuestion(questionId, answer));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCard);"]},"metadata":{},"sourceType":"module"}